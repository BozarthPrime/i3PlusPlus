#!/usr/bin/env bash
#
# mfpr
#
# Make a PR of the current branch against RCBugFix or dev
#

<<<<<<< HEAD
MFINFO=$(mfinfo "$@") || exit

IFS=' ' read -a INFO <<< "$MFINFO"

=======
[[ $# < 2 && $1 != "-h" && $1 != "--help" ]] || { echo "Usage: `basename $0` [branch]" 1>&2 ; exit 1; }

MFINFO=$(mfinfo "$@") || exit 1
IFS=' ' read -a INFO <<< "$MFINFO"
>>>>>>> upstream-marlin/1.1.x
ORG=${INFO[0]}
FORK=${INFO[1]}
REPO=${INFO[2]}
TARG=${INFO[3]}
BRANCH=${INFO[4]}
<<<<<<< HEAD

if [[ $BRANCH == "(no" ]]; then
  echo "Git is busy with merge, rebase, etc."
  exit 1
fi

if [[ ! -z "$1" ]]; then { BRANCH=$1 ; git checkout $1 || exit 1; } fi

if [[ $BRANCH == $TARG ]]; then
  echo "Can't make a PR from $BRANCH" ; exit
fi

=======
OLDBRANCH=${INFO[5]}

[[ $BRANCH == $TARG ]] && { echo "Can't create a PR from the PR Target ($BRANCH). Make a copy first." 1>&2 ; exit 1; }

[[ $BRANCH != $OLDBRANCH ]] && { git checkout $BRANCH || exit 1; }

# See if it's been pushed yet
>>>>>>> upstream-marlin/1.1.x
if [ -z "$(git branch -vv | grep ^\* | grep \\[origin)" ]; then firstpush; fi

TOOL=$(which gnome-open xdg-open open | awk '{ print $1 }')
URL="https://github.com/$ORG/$REPO/compare/$TARG...$FORK:$BRANCH?expand=1"

if [ -z "$TOOL" ]; then
  echo "Can't find a tool to open the URL:"
  echo $URL
else
  echo "Opening a New PR Form..."
  "$TOOL" "$URL"
fi
<<<<<<< HEAD
=======

[[ $BRANCH != $OLDBRANCH ]] && git checkout $OLDBRANCH
>>>>>>> upstream-marlin/1.1.x
